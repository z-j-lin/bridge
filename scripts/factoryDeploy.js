const {expect} = require("chai");
const { getCreate2Address } = require("ethers/lib/utils");
const { ethers } = require("hardhat");
var address;
describe("MadnetFactory", function () {
    it.only("should return 0", async function(){
        const MadnetFactory = await ethers.getContractFactory("MadnetFactory");
        const madnetFactory = await MadnetFactory.deploy();
        await madnetFactory.deployed();
        await madnetFactory.initialize();
        await madnetFactory.deploy('0x000000000000000000000000000000000000000000000000004d616442797465', '0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a2610804806100a46000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806313af4035146100515780637a9e5e4b1461006d5780638da5cb5b14610089578063bf7e214f146100a7575b600080fd5b61006b6004803603810190610066919061053e565b6100c5565b005b610087600480360381019061008291906105a9565b6101db565b005b6100916102ee565b60405161009e91906105e5565b60405180910390f35b6100af610314565b6040516100bc919061065f565b60405180910390f35b6100f3336000357fffffffff0000000000000000000000000000000000000000000000000000000016610338565b610132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610129906106d7565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610209336000357fffffffff0000000000000000000000000000000000000000000000000000000016610338565b610248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023f906106d7565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561037757600190506104d5565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156103d657600190506104d5565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561043457600090506104d5565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff1660e01b815260040161049193929190610732565b602060405180830381865afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d291906107a1565b90505b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061050b826104e0565b9050919050565b61051b81610500565b811461052657600080fd5b50565b60008135905061053881610512565b92915050565b600060208284031215610554576105536104db565b5b600061056284828501610529565b91505092915050565b600061057682610500565b9050919050565b6105868161056b565b811461059157600080fd5b50565b6000813590506105a38161057d565b92915050565b6000602082840312156105bf576105be6104db565b5b60006105cd84828501610594565b91505092915050565b6105df81610500565b82525050565b60006020820190506105fa60008301846105d6565b92915050565b6000819050919050565b600061062561062061061b846104e0565b610600565b6104e0565b9050919050565b60006106378261060a565b9050919050565b60006106498261062c565b9050919050565b6106598161063e565b82525050565b60006020820190506106746000830184610650565b92915050565b600082825260208201905092915050565b7f64732d617574682d756e617574686f72697a6564000000000000000000000000600082015250565b60006106c160148361067a565b91506106cc8261068b565b602082019050919050565b600060208201905081810360008301526106f0816106b4565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61072c816106f7565b82525050565b600060608201905061074760008301866105d6565b61075460208301856105d6565b6107616040830184610723565b949350505050565b60008115159050919050565b61077e81610769565b811461078957600080fd5b50565b60008151905061079b81610775565b92915050565b6000602082840312156107b7576107b66104db565b5b60006107c58482850161078c565b9150509291505056fea2646970667358221220736dcfb08714b80ab52a79613a46e1f3366f0eb4efddd3fdf763cbf4aaae49d164736f6c634300080a0033', "0xaaaa")
        address = madnetFactory.address;
    });
    it("should return address of contract", async function(){
        const MadnetFactory = await ethers.getContractFactory("MadnetFactory");
        //get the bytecode of the implementation contract
        const MadByte = await ethers.getContractFactory("MadByte");
        //connect to the deployed factory contract
        const madnetFactory = await MadnetFactory.attach("0x782A289aF1dF5Cdbc48fE8DbCa772E7d0F34e4B8");
        //run the deployfunction      
        await madnetFactory.deploy('0x000000000000000000000000000000000000000000000000004d616442797465', initcode, "0xaaaa")
    });
});